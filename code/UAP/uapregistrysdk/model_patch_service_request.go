/*
Service API

API for managing services

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package uapregistrysdk

import (
	"encoding/json"
	"fmt"
)

// checks if the PatchServiceRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PatchServiceRequest{}

// PatchServiceRequest Schema for service patch requests
type PatchServiceRequest struct {
	// 服务注册类型。true：临时注册；false：持久注册
	Ephemeral *bool `json:"ephemeral,omitempty"`
	// 服务名称
	Name string `json:"name"`
	// 连接失败重试次数
	Retries *int32 `json:"retries,omitempty"`
	// 传输协议类型
	Protocol string `json:"protocol"`
	// 后端服务域名/IP
	Host string `json:"host"`
	// 后端服务端口
	Port int32 `json:"port"`
	// 服务路径
	Path *string `json:"path,omitempty"`
	// 连接超时时间（毫秒）
	ConnectTimeout *int32 `json:"connect_timeout,omitempty"`
	// 写入超时时间（毫秒）
	WriteTimeout *int32 `json:"write_timeout,omitempty"`
	// 读取超时时间（毫秒）
	ReadTimeout *int32 `json:"read_timeout,omitempty"`
	// 自定义标签（例如[namespacea,group=x]）
	Tags            []string         `json:"tags,omitempty"`
	EphemeralCheck  *EphemeralCheck  `json:"ephemeral_check,omitempty"`
	PersistentCheck *PersistentCheck `json:"persistent_check,omitempty"`
	// Agent/Tool服务通信协议
	AgentProtocol *string `json:"agent_protocol,omitempty"`
	// 不同agent_protocol对应的特有内容
	AgentInfo map[string]interface{} `json:"agent_info,omitempty"`
	// agent_info为空时，从agent_info_url获取agent_protocol内容
	AgentInfoUrl         *string `json:"agent_info_url,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _PatchServiceRequest PatchServiceRequest

// NewPatchServiceRequest instantiates a new PatchServiceRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPatchServiceRequest(name string, protocol string, host string, port int32) *PatchServiceRequest {
	this := PatchServiceRequest{}
	this.Name = name
	this.Protocol = protocol
	this.Host = host
	this.Port = port
	return &this
}

// NewPatchServiceRequestWithDefaults instantiates a new PatchServiceRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPatchServiceRequestWithDefaults() *PatchServiceRequest {
	this := PatchServiceRequest{}
	return &this
}

// GetEphemeral returns the Ephemeral field value if set, zero value otherwise.
func (o *PatchServiceRequest) GetEphemeral() bool {
	if o == nil || IsNil(o.Ephemeral) {
		var ret bool
		return ret
	}
	return *o.Ephemeral
}

// GetEphemeralOk returns a tuple with the Ephemeral field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PatchServiceRequest) GetEphemeralOk() (*bool, bool) {
	if o == nil || IsNil(o.Ephemeral) {
		return nil, false
	}
	return o.Ephemeral, true
}

// HasEphemeral returns a boolean if a field has been set.
func (o *PatchServiceRequest) HasEphemeral() bool {
	if o != nil && !IsNil(o.Ephemeral) {
		return true
	}

	return false
}

// SetEphemeral gets a reference to the given bool and assigns it to the Ephemeral field.
func (o *PatchServiceRequest) SetEphemeral(v bool) {
	o.Ephemeral = &v
}

// GetName returns the Name field value
func (o *PatchServiceRequest) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *PatchServiceRequest) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *PatchServiceRequest) SetName(v string) {
	o.Name = v
}

// GetRetries returns the Retries field value if set, zero value otherwise.
func (o *PatchServiceRequest) GetRetries() int32 {
	if o == nil || IsNil(o.Retries) {
		var ret int32
		return ret
	}
	return *o.Retries
}

// GetRetriesOk returns a tuple with the Retries field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PatchServiceRequest) GetRetriesOk() (*int32, bool) {
	if o == nil || IsNil(o.Retries) {
		return nil, false
	}
	return o.Retries, true
}

// HasRetries returns a boolean if a field has been set.
func (o *PatchServiceRequest) HasRetries() bool {
	if o != nil && !IsNil(o.Retries) {
		return true
	}

	return false
}

// SetRetries gets a reference to the given int32 and assigns it to the Retries field.
func (o *PatchServiceRequest) SetRetries(v int32) {
	o.Retries = &v
}

// GetProtocol returns the Protocol field value
func (o *PatchServiceRequest) GetProtocol() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Protocol
}

// GetProtocolOk returns a tuple with the Protocol field value
// and a boolean to check if the value has been set.
func (o *PatchServiceRequest) GetProtocolOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Protocol, true
}

// SetProtocol sets field value
func (o *PatchServiceRequest) SetProtocol(v string) {
	o.Protocol = v
}

// GetHost returns the Host field value
func (o *PatchServiceRequest) GetHost() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Host
}

// GetHostOk returns a tuple with the Host field value
// and a boolean to check if the value has been set.
func (o *PatchServiceRequest) GetHostOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Host, true
}

// SetHost sets field value
func (o *PatchServiceRequest) SetHost(v string) {
	o.Host = v
}

// GetPort returns the Port field value
func (o *PatchServiceRequest) GetPort() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Port
}

// GetPortOk returns a tuple with the Port field value
// and a boolean to check if the value has been set.
func (o *PatchServiceRequest) GetPortOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Port, true
}

// SetPort sets field value
func (o *PatchServiceRequest) SetPort(v int32) {
	o.Port = v
}

// GetPath returns the Path field value if set, zero value otherwise.
func (o *PatchServiceRequest) GetPath() string {
	if o == nil || IsNil(o.Path) {
		var ret string
		return ret
	}
	return *o.Path
}

// GetPathOk returns a tuple with the Path field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PatchServiceRequest) GetPathOk() (*string, bool) {
	if o == nil || IsNil(o.Path) {
		return nil, false
	}
	return o.Path, true
}

// HasPath returns a boolean if a field has been set.
func (o *PatchServiceRequest) HasPath() bool {
	if o != nil && !IsNil(o.Path) {
		return true
	}

	return false
}

// SetPath gets a reference to the given string and assigns it to the Path field.
func (o *PatchServiceRequest) SetPath(v string) {
	o.Path = &v
}

// GetConnectTimeout returns the ConnectTimeout field value if set, zero value otherwise.
func (o *PatchServiceRequest) GetConnectTimeout() int32 {
	if o == nil || IsNil(o.ConnectTimeout) {
		var ret int32
		return ret
	}
	return *o.ConnectTimeout
}

// GetConnectTimeoutOk returns a tuple with the ConnectTimeout field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PatchServiceRequest) GetConnectTimeoutOk() (*int32, bool) {
	if o == nil || IsNil(o.ConnectTimeout) {
		return nil, false
	}
	return o.ConnectTimeout, true
}

// HasConnectTimeout returns a boolean if a field has been set.
func (o *PatchServiceRequest) HasConnectTimeout() bool {
	if o != nil && !IsNil(o.ConnectTimeout) {
		return true
	}

	return false
}

// SetConnectTimeout gets a reference to the given int32 and assigns it to the ConnectTimeout field.
func (o *PatchServiceRequest) SetConnectTimeout(v int32) {
	o.ConnectTimeout = &v
}

// GetWriteTimeout returns the WriteTimeout field value if set, zero value otherwise.
func (o *PatchServiceRequest) GetWriteTimeout() int32 {
	if o == nil || IsNil(o.WriteTimeout) {
		var ret int32
		return ret
	}
	return *o.WriteTimeout
}

// GetWriteTimeoutOk returns a tuple with the WriteTimeout field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PatchServiceRequest) GetWriteTimeoutOk() (*int32, bool) {
	if o == nil || IsNil(o.WriteTimeout) {
		return nil, false
	}
	return o.WriteTimeout, true
}

// HasWriteTimeout returns a boolean if a field has been set.
func (o *PatchServiceRequest) HasWriteTimeout() bool {
	if o != nil && !IsNil(o.WriteTimeout) {
		return true
	}

	return false
}

// SetWriteTimeout gets a reference to the given int32 and assigns it to the WriteTimeout field.
func (o *PatchServiceRequest) SetWriteTimeout(v int32) {
	o.WriteTimeout = &v
}

// GetReadTimeout returns the ReadTimeout field value if set, zero value otherwise.
func (o *PatchServiceRequest) GetReadTimeout() int32 {
	if o == nil || IsNil(o.ReadTimeout) {
		var ret int32
		return ret
	}
	return *o.ReadTimeout
}

// GetReadTimeoutOk returns a tuple with the ReadTimeout field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PatchServiceRequest) GetReadTimeoutOk() (*int32, bool) {
	if o == nil || IsNil(o.ReadTimeout) {
		return nil, false
	}
	return o.ReadTimeout, true
}

// HasReadTimeout returns a boolean if a field has been set.
func (o *PatchServiceRequest) HasReadTimeout() bool {
	if o != nil && !IsNil(o.ReadTimeout) {
		return true
	}

	return false
}

// SetReadTimeout gets a reference to the given int32 and assigns it to the ReadTimeout field.
func (o *PatchServiceRequest) SetReadTimeout(v int32) {
	o.ReadTimeout = &v
}

// GetTags returns the Tags field value if set, zero value otherwise.
func (o *PatchServiceRequest) GetTags() []string {
	if o == nil || IsNil(o.Tags) {
		var ret []string
		return ret
	}
	return o.Tags
}

// GetTagsOk returns a tuple with the Tags field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PatchServiceRequest) GetTagsOk() ([]string, bool) {
	if o == nil || IsNil(o.Tags) {
		return nil, false
	}
	return o.Tags, true
}

// HasTags returns a boolean if a field has been set.
func (o *PatchServiceRequest) HasTags() bool {
	if o != nil && !IsNil(o.Tags) {
		return true
	}

	return false
}

// SetTags gets a reference to the given []string and assigns it to the Tags field.
func (o *PatchServiceRequest) SetTags(v []string) {
	o.Tags = v
}

// GetEphemeralCheck returns the EphemeralCheck field value if set, zero value otherwise.
func (o *PatchServiceRequest) GetEphemeralCheck() EphemeralCheck {
	if o == nil || IsNil(o.EphemeralCheck) {
		var ret EphemeralCheck
		return ret
	}
	return *o.EphemeralCheck
}

// GetEphemeralCheckOk returns a tuple with the EphemeralCheck field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PatchServiceRequest) GetEphemeralCheckOk() (*EphemeralCheck, bool) {
	if o == nil || IsNil(o.EphemeralCheck) {
		return nil, false
	}
	return o.EphemeralCheck, true
}

// HasEphemeralCheck returns a boolean if a field has been set.
func (o *PatchServiceRequest) HasEphemeralCheck() bool {
	if o != nil && !IsNil(o.EphemeralCheck) {
		return true
	}

	return false
}

// SetEphemeralCheck gets a reference to the given EphemeralCheck and assigns it to the EphemeralCheck field.
func (o *PatchServiceRequest) SetEphemeralCheck(v EphemeralCheck) {
	o.EphemeralCheck = &v
}

// GetPersistentCheck returns the PersistentCheck field value if set, zero value otherwise.
func (o *PatchServiceRequest) GetPersistentCheck() PersistentCheck {
	if o == nil || IsNil(o.PersistentCheck) {
		var ret PersistentCheck
		return ret
	}
	return *o.PersistentCheck
}

// GetPersistentCheckOk returns a tuple with the PersistentCheck field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PatchServiceRequest) GetPersistentCheckOk() (*PersistentCheck, bool) {
	if o == nil || IsNil(o.PersistentCheck) {
		return nil, false
	}
	return o.PersistentCheck, true
}

// HasPersistentCheck returns a boolean if a field has been set.
func (o *PatchServiceRequest) HasPersistentCheck() bool {
	if o != nil && !IsNil(o.PersistentCheck) {
		return true
	}

	return false
}

// SetPersistentCheck gets a reference to the given PersistentCheck and assigns it to the PersistentCheck field.
func (o *PatchServiceRequest) SetPersistentCheck(v PersistentCheck) {
	o.PersistentCheck = &v
}

// GetAgentProtocol returns the AgentProtocol field value if set, zero value otherwise.
func (o *PatchServiceRequest) GetAgentProtocol() string {
	if o == nil || IsNil(o.AgentProtocol) {
		var ret string
		return ret
	}
	return *o.AgentProtocol
}

// GetAgentProtocolOk returns a tuple with the AgentProtocol field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PatchServiceRequest) GetAgentProtocolOk() (*string, bool) {
	if o == nil || IsNil(o.AgentProtocol) {
		return nil, false
	}
	return o.AgentProtocol, true
}

// HasAgentProtocol returns a boolean if a field has been set.
func (o *PatchServiceRequest) HasAgentProtocol() bool {
	if o != nil && !IsNil(o.AgentProtocol) {
		return true
	}

	return false
}

// SetAgentProtocol gets a reference to the given string and assigns it to the AgentProtocol field.
func (o *PatchServiceRequest) SetAgentProtocol(v string) {
	o.AgentProtocol = &v
}

// GetAgentInfo returns the AgentInfo field value if set, zero value otherwise.
func (o *PatchServiceRequest) GetAgentInfo() map[string]interface{} {
	if o == nil || IsNil(o.AgentInfo) {
		var ret map[string]interface{}
		return ret
	}
	return o.AgentInfo
}

// GetAgentInfoOk returns a tuple with the AgentInfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PatchServiceRequest) GetAgentInfoOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.AgentInfo) {
		return map[string]interface{}{}, false
	}
	return o.AgentInfo, true
}

// HasAgentInfo returns a boolean if a field has been set.
func (o *PatchServiceRequest) HasAgentInfo() bool {
	if o != nil && !IsNil(o.AgentInfo) {
		return true
	}

	return false
}

// SetAgentInfo gets a reference to the given map[string]interface{} and assigns it to the AgentInfo field.
func (o *PatchServiceRequest) SetAgentInfo(v map[string]interface{}) {
	o.AgentInfo = v
}

// GetAgentInfoUrl returns the AgentInfoUrl field value if set, zero value otherwise.
func (o *PatchServiceRequest) GetAgentInfoUrl() string {
	if o == nil || IsNil(o.AgentInfoUrl) {
		var ret string
		return ret
	}
	return *o.AgentInfoUrl
}

// GetAgentInfoUrlOk returns a tuple with the AgentInfoUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PatchServiceRequest) GetAgentInfoUrlOk() (*string, bool) {
	if o == nil || IsNil(o.AgentInfoUrl) {
		return nil, false
	}
	return o.AgentInfoUrl, true
}

// HasAgentInfoUrl returns a boolean if a field has been set.
func (o *PatchServiceRequest) HasAgentInfoUrl() bool {
	if o != nil && !IsNil(o.AgentInfoUrl) {
		return true
	}

	return false
}

// SetAgentInfoUrl gets a reference to the given string and assigns it to the AgentInfoUrl field.
func (o *PatchServiceRequest) SetAgentInfoUrl(v string) {
	o.AgentInfoUrl = &v
}

func (o PatchServiceRequest) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PatchServiceRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Ephemeral) {
		toSerialize["ephemeral"] = o.Ephemeral
	}
	toSerialize["name"] = o.Name
	if !IsNil(o.Retries) {
		toSerialize["retries"] = o.Retries
	}
	toSerialize["protocol"] = o.Protocol
	toSerialize["host"] = o.Host
	toSerialize["port"] = o.Port
	if !IsNil(o.Path) {
		toSerialize["path"] = o.Path
	}
	if !IsNil(o.ConnectTimeout) {
		toSerialize["connect_timeout"] = o.ConnectTimeout
	}
	if !IsNil(o.WriteTimeout) {
		toSerialize["write_timeout"] = o.WriteTimeout
	}
	if !IsNil(o.ReadTimeout) {
		toSerialize["read_timeout"] = o.ReadTimeout
	}
	if !IsNil(o.Tags) {
		toSerialize["tags"] = o.Tags
	}
	if !IsNil(o.EphemeralCheck) {
		toSerialize["ephemeral_check"] = o.EphemeralCheck
	}
	if !IsNil(o.PersistentCheck) {
		toSerialize["persistent_check"] = o.PersistentCheck
	}
	if !IsNil(o.AgentProtocol) {
		toSerialize["agent_protocol"] = o.AgentProtocol
	}
	if !IsNil(o.AgentInfo) {
		toSerialize["agent_info"] = o.AgentInfo
	}
	if !IsNil(o.AgentInfoUrl) {
		toSerialize["agent_info_url"] = o.AgentInfoUrl
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *PatchServiceRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"name",
		"protocol",
		"host",
		"port",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varPatchServiceRequest := _PatchServiceRequest{}

	err = json.Unmarshal(data, &varPatchServiceRequest)

	if err != nil {
		return err
	}

	*o = PatchServiceRequest(varPatchServiceRequest)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "ephemeral")
		delete(additionalProperties, "name")
		delete(additionalProperties, "retries")
		delete(additionalProperties, "protocol")
		delete(additionalProperties, "host")
		delete(additionalProperties, "port")
		delete(additionalProperties, "path")
		delete(additionalProperties, "connect_timeout")
		delete(additionalProperties, "write_timeout")
		delete(additionalProperties, "read_timeout")
		delete(additionalProperties, "tags")
		delete(additionalProperties, "ephemeral_check")
		delete(additionalProperties, "persistent_check")
		delete(additionalProperties, "agent_protocol")
		delete(additionalProperties, "agent_info")
		delete(additionalProperties, "agent_info_url")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullablePatchServiceRequest struct {
	value *PatchServiceRequest
	isSet bool
}

func (v NullablePatchServiceRequest) Get() *PatchServiceRequest {
	return v.value
}

func (v *NullablePatchServiceRequest) Set(val *PatchServiceRequest) {
	v.value = val
	v.isSet = true
}

func (v NullablePatchServiceRequest) IsSet() bool {
	return v.isSet
}

func (v *NullablePatchServiceRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePatchServiceRequest(val *PatchServiceRequest) *NullablePatchServiceRequest {
	return &NullablePatchServiceRequest{value: val, isSet: true}
}

func (v NullablePatchServiceRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePatchServiceRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
