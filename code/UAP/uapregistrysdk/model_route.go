/*
Service API

API for managing services

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package uapregistrysdk

import (
	"bytes"
	"encoding/json"
	"fmt"
)

// checks if the Route type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &Route{}

// Route struct for Route
type Route struct {
	// 路由唯一标识
	Id *string `json:"id,omitempty"`
	// 记录创建时间（由注册中心设置）
	CreatedAt *int64 `json:"created_at,omitempty"`
	// 记录最后更新时间（由注册中心设置）
	UpdatedAt *int64 `json:"updated_at,omitempty"`
	// 路由更新序号
	Index *int64 `json:"index,omitempty"`
	// 路由名称
	Name string `json:"name"`
	// 此路由关联的网关标识
	GatewayId *string `json:"gateway_id,omitempty"`
	// 支持的协议列表
	Protocols []string `json:"protocols,omitempty"`
	// 匹配的HTTP方法列表
	Methods []string `json:"methods,omitempty"`
	// 匹配的Host列表
	Hosts []string `json:"hosts,omitempty"`
	// 匹配的路径
	Paths []string `json:"paths,omitempty"`
	// 匹配的请求头
	Headers []string `json:"headers,omitempty"`
	// 协议不匹配时的重定向状态码
	HttpsRedirectStatusCode *int32 `json:"https_redirect_status_code,omitempty"`
	// 正则匹配优先级
	RegexPriority *int32 `json:"regex_priority,omitempty"`
	// 是否移除路径前缀
	StripPath *bool `json:"strip_path,omitempty"`
	// 是否保留原始请求的Host头
	PreserveHost *bool `json:"preserve_host,omitempty"`
	// 是否缓冲请求体数据
	RequestBuffering *bool `json:"request_buffering,omitempty"`
	// 是否缓冲响应体数据
	ResponseBuffering *bool `json:"response_buffering,omitempty"`
	// 支持的SNI列表
	Snis []string `json:"snis,omitempty"`
	// 允许的源IP列表
	Sources []string `json:"sources,omitempty"`
	// 目标服务地址列表
	Destinations []string `json:"destinations,omitempty"`
	// 路由标签
	Tags []string `json:"tags,omitempty"`
	// Agent/Tool通信协议
	AgentProtocol *string `json:"agent_protocol,omitempty"`
	// 关联的服务名
	Service *string `json:"service,omitempty"`
}

type _Route Route

// NewRoute instantiates a new Route object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRoute(name string) *Route {
	this := Route{}
	this.Name = name
	return &this
}

// NewRouteWithDefaults instantiates a new Route object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRouteWithDefaults() *Route {
	this := Route{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *Route) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Route) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *Route) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *Route) SetId(v string) {
	o.Id = &v
}

// GetCreatedAt returns the CreatedAt field value if set, zero value otherwise.
func (o *Route) GetCreatedAt() int64 {
	if o == nil || IsNil(o.CreatedAt) {
		var ret int64
		return ret
	}
	return *o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Route) GetCreatedAtOk() (*int64, bool) {
	if o == nil || IsNil(o.CreatedAt) {
		return nil, false
	}
	return o.CreatedAt, true
}

// HasCreatedAt returns a boolean if a field has been set.
func (o *Route) HasCreatedAt() bool {
	if o != nil && !IsNil(o.CreatedAt) {
		return true
	}

	return false
}

// SetCreatedAt gets a reference to the given int64 and assigns it to the CreatedAt field.
func (o *Route) SetCreatedAt(v int64) {
	o.CreatedAt = &v
}

// GetUpdatedAt returns the UpdatedAt field value if set, zero value otherwise.
func (o *Route) GetUpdatedAt() int64 {
	if o == nil || IsNil(o.UpdatedAt) {
		var ret int64
		return ret
	}
	return *o.UpdatedAt
}

// GetUpdatedAtOk returns a tuple with the UpdatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Route) GetUpdatedAtOk() (*int64, bool) {
	if o == nil || IsNil(o.UpdatedAt) {
		return nil, false
	}
	return o.UpdatedAt, true
}

// HasUpdatedAt returns a boolean if a field has been set.
func (o *Route) HasUpdatedAt() bool {
	if o != nil && !IsNil(o.UpdatedAt) {
		return true
	}

	return false
}

// SetUpdatedAt gets a reference to the given int64 and assigns it to the UpdatedAt field.
func (o *Route) SetUpdatedAt(v int64) {
	o.UpdatedAt = &v
}

// GetIndex returns the Index field value if set, zero value otherwise.
func (o *Route) GetIndex() int64 {
	if o == nil || IsNil(o.Index) {
		var ret int64
		return ret
	}
	return *o.Index
}

// GetIndexOk returns a tuple with the Index field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Route) GetIndexOk() (*int64, bool) {
	if o == nil || IsNil(o.Index) {
		return nil, false
	}
	return o.Index, true
}

// HasIndex returns a boolean if a field has been set.
func (o *Route) HasIndex() bool {
	if o != nil && !IsNil(o.Index) {
		return true
	}

	return false
}

// SetIndex gets a reference to the given int64 and assigns it to the Index field.
func (o *Route) SetIndex(v int64) {
	o.Index = &v
}

// GetName returns the Name field value
func (o *Route) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *Route) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *Route) SetName(v string) {
	o.Name = v
}

// GetGatewayId returns the GatewayId field value if set, zero value otherwise.
func (o *Route) GetGatewayId() string {
	if o == nil || IsNil(o.GatewayId) {
		var ret string
		return ret
	}
	return *o.GatewayId
}

// GetGatewayIdOk returns a tuple with the GatewayId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Route) GetGatewayIdOk() (*string, bool) {
	if o == nil || IsNil(o.GatewayId) {
		return nil, false
	}
	return o.GatewayId, true
}

// HasGatewayId returns a boolean if a field has been set.
func (o *Route) HasGatewayId() bool {
	if o != nil && !IsNil(o.GatewayId) {
		return true
	}

	return false
}

// SetGatewayId gets a reference to the given string and assigns it to the GatewayId field.
func (o *Route) SetGatewayId(v string) {
	o.GatewayId = &v
}

// GetProtocols returns the Protocols field value if set, zero value otherwise.
func (o *Route) GetProtocols() []string {
	if o == nil || IsNil(o.Protocols) {
		var ret []string
		return ret
	}
	return o.Protocols
}

// GetProtocolsOk returns a tuple with the Protocols field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Route) GetProtocolsOk() ([]string, bool) {
	if o == nil || IsNil(o.Protocols) {
		return nil, false
	}
	return o.Protocols, true
}

// HasProtocols returns a boolean if a field has been set.
func (o *Route) HasProtocols() bool {
	if o != nil && !IsNil(o.Protocols) {
		return true
	}

	return false
}

// SetProtocols gets a reference to the given []string and assigns it to the Protocols field.
func (o *Route) SetProtocols(v []string) {
	o.Protocols = v
}

// GetMethods returns the Methods field value if set, zero value otherwise.
func (o *Route) GetMethods() []string {
	if o == nil || IsNil(o.Methods) {
		var ret []string
		return ret
	}
	return o.Methods
}

// GetMethodsOk returns a tuple with the Methods field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Route) GetMethodsOk() ([]string, bool) {
	if o == nil || IsNil(o.Methods) {
		return nil, false
	}
	return o.Methods, true
}

// HasMethods returns a boolean if a field has been set.
func (o *Route) HasMethods() bool {
	if o != nil && !IsNil(o.Methods) {
		return true
	}

	return false
}

// SetMethods gets a reference to the given []string and assigns it to the Methods field.
func (o *Route) SetMethods(v []string) {
	o.Methods = v
}

// GetHosts returns the Hosts field value if set, zero value otherwise.
func (o *Route) GetHosts() []string {
	if o == nil || IsNil(o.Hosts) {
		var ret []string
		return ret
	}
	return o.Hosts
}

// GetHostsOk returns a tuple with the Hosts field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Route) GetHostsOk() ([]string, bool) {
	if o == nil || IsNil(o.Hosts) {
		return nil, false
	}
	return o.Hosts, true
}

// HasHosts returns a boolean if a field has been set.
func (o *Route) HasHosts() bool {
	if o != nil && !IsNil(o.Hosts) {
		return true
	}

	return false
}

// SetHosts gets a reference to the given []string and assigns it to the Hosts field.
func (o *Route) SetHosts(v []string) {
	o.Hosts = v
}

// GetPaths returns the Paths field value if set, zero value otherwise.
func (o *Route) GetPaths() []string {
	if o == nil || IsNil(o.Paths) {
		var ret []string
		return ret
	}
	return o.Paths
}

// GetPathsOk returns a tuple with the Paths field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Route) GetPathsOk() ([]string, bool) {
	if o == nil || IsNil(o.Paths) {
		return nil, false
	}
	return o.Paths, true
}

// HasPaths returns a boolean if a field has been set.
func (o *Route) HasPaths() bool {
	if o != nil && !IsNil(o.Paths) {
		return true
	}

	return false
}

// SetPaths gets a reference to the given []string and assigns it to the Paths field.
func (o *Route) SetPaths(v []string) {
	o.Paths = v
}

// GetHeaders returns the Headers field value if set, zero value otherwise.
func (o *Route) GetHeaders() []string {
	if o == nil || IsNil(o.Headers) {
		var ret []string
		return ret
	}
	return o.Headers
}

// GetHeadersOk returns a tuple with the Headers field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Route) GetHeadersOk() ([]string, bool) {
	if o == nil || IsNil(o.Headers) {
		return nil, false
	}
	return o.Headers, true
}

// HasHeaders returns a boolean if a field has been set.
func (o *Route) HasHeaders() bool {
	if o != nil && !IsNil(o.Headers) {
		return true
	}

	return false
}

// SetHeaders gets a reference to the given []string and assigns it to the Headers field.
func (o *Route) SetHeaders(v []string) {
	o.Headers = v
}

// GetHttpsRedirectStatusCode returns the HttpsRedirectStatusCode field value if set, zero value otherwise.
func (o *Route) GetHttpsRedirectStatusCode() int32 {
	if o == nil || IsNil(o.HttpsRedirectStatusCode) {
		var ret int32
		return ret
	}
	return *o.HttpsRedirectStatusCode
}

// GetHttpsRedirectStatusCodeOk returns a tuple with the HttpsRedirectStatusCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Route) GetHttpsRedirectStatusCodeOk() (*int32, bool) {
	if o == nil || IsNil(o.HttpsRedirectStatusCode) {
		return nil, false
	}
	return o.HttpsRedirectStatusCode, true
}

// HasHttpsRedirectStatusCode returns a boolean if a field has been set.
func (o *Route) HasHttpsRedirectStatusCode() bool {
	if o != nil && !IsNil(o.HttpsRedirectStatusCode) {
		return true
	}

	return false
}

// SetHttpsRedirectStatusCode gets a reference to the given int32 and assigns it to the HttpsRedirectStatusCode field.
func (o *Route) SetHttpsRedirectStatusCode(v int32) {
	o.HttpsRedirectStatusCode = &v
}

// GetRegexPriority returns the RegexPriority field value if set, zero value otherwise.
func (o *Route) GetRegexPriority() int32 {
	if o == nil || IsNil(o.RegexPriority) {
		var ret int32
		return ret
	}
	return *o.RegexPriority
}

// GetRegexPriorityOk returns a tuple with the RegexPriority field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Route) GetRegexPriorityOk() (*int32, bool) {
	if o == nil || IsNil(o.RegexPriority) {
		return nil, false
	}
	return o.RegexPriority, true
}

// HasRegexPriority returns a boolean if a field has been set.
func (o *Route) HasRegexPriority() bool {
	if o != nil && !IsNil(o.RegexPriority) {
		return true
	}

	return false
}

// SetRegexPriority gets a reference to the given int32 and assigns it to the RegexPriority field.
func (o *Route) SetRegexPriority(v int32) {
	o.RegexPriority = &v
}

// GetStripPath returns the StripPath field value if set, zero value otherwise.
func (o *Route) GetStripPath() bool {
	if o == nil || IsNil(o.StripPath) {
		var ret bool
		return ret
	}
	return *o.StripPath
}

// GetStripPathOk returns a tuple with the StripPath field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Route) GetStripPathOk() (*bool, bool) {
	if o == nil || IsNil(o.StripPath) {
		return nil, false
	}
	return o.StripPath, true
}

// HasStripPath returns a boolean if a field has been set.
func (o *Route) HasStripPath() bool {
	if o != nil && !IsNil(o.StripPath) {
		return true
	}

	return false
}

// SetStripPath gets a reference to the given bool and assigns it to the StripPath field.
func (o *Route) SetStripPath(v bool) {
	o.StripPath = &v
}

// GetPreserveHost returns the PreserveHost field value if set, zero value otherwise.
func (o *Route) GetPreserveHost() bool {
	if o == nil || IsNil(o.PreserveHost) {
		var ret bool
		return ret
	}
	return *o.PreserveHost
}

// GetPreserveHostOk returns a tuple with the PreserveHost field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Route) GetPreserveHostOk() (*bool, bool) {
	if o == nil || IsNil(o.PreserveHost) {
		return nil, false
	}
	return o.PreserveHost, true
}

// HasPreserveHost returns a boolean if a field has been set.
func (o *Route) HasPreserveHost() bool {
	if o != nil && !IsNil(o.PreserveHost) {
		return true
	}

	return false
}

// SetPreserveHost gets a reference to the given bool and assigns it to the PreserveHost field.
func (o *Route) SetPreserveHost(v bool) {
	o.PreserveHost = &v
}

// GetRequestBuffering returns the RequestBuffering field value if set, zero value otherwise.
func (o *Route) GetRequestBuffering() bool {
	if o == nil || IsNil(o.RequestBuffering) {
		var ret bool
		return ret
	}
	return *o.RequestBuffering
}

// GetRequestBufferingOk returns a tuple with the RequestBuffering field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Route) GetRequestBufferingOk() (*bool, bool) {
	if o == nil || IsNil(o.RequestBuffering) {
		return nil, false
	}
	return o.RequestBuffering, true
}

// HasRequestBuffering returns a boolean if a field has been set.
func (o *Route) HasRequestBuffering() bool {
	if o != nil && !IsNil(o.RequestBuffering) {
		return true
	}

	return false
}

// SetRequestBuffering gets a reference to the given bool and assigns it to the RequestBuffering field.
func (o *Route) SetRequestBuffering(v bool) {
	o.RequestBuffering = &v
}

// GetResponseBuffering returns the ResponseBuffering field value if set, zero value otherwise.
func (o *Route) GetResponseBuffering() bool {
	if o == nil || IsNil(o.ResponseBuffering) {
		var ret bool
		return ret
	}
	return *o.ResponseBuffering
}

// GetResponseBufferingOk returns a tuple with the ResponseBuffering field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Route) GetResponseBufferingOk() (*bool, bool) {
	if o == nil || IsNil(o.ResponseBuffering) {
		return nil, false
	}
	return o.ResponseBuffering, true
}

// HasResponseBuffering returns a boolean if a field has been set.
func (o *Route) HasResponseBuffering() bool {
	if o != nil && !IsNil(o.ResponseBuffering) {
		return true
	}

	return false
}

// SetResponseBuffering gets a reference to the given bool and assigns it to the ResponseBuffering field.
func (o *Route) SetResponseBuffering(v bool) {
	o.ResponseBuffering = &v
}

// GetSnis returns the Snis field value if set, zero value otherwise.
func (o *Route) GetSnis() []string {
	if o == nil || IsNil(o.Snis) {
		var ret []string
		return ret
	}
	return o.Snis
}

// GetSnisOk returns a tuple with the Snis field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Route) GetSnisOk() ([]string, bool) {
	if o == nil || IsNil(o.Snis) {
		return nil, false
	}
	return o.Snis, true
}

// HasSnis returns a boolean if a field has been set.
func (o *Route) HasSnis() bool {
	if o != nil && !IsNil(o.Snis) {
		return true
	}

	return false
}

// SetSnis gets a reference to the given []string and assigns it to the Snis field.
func (o *Route) SetSnis(v []string) {
	o.Snis = v
}

// GetSources returns the Sources field value if set, zero value otherwise.
func (o *Route) GetSources() []string {
	if o == nil || IsNil(o.Sources) {
		var ret []string
		return ret
	}
	return o.Sources
}

// GetSourcesOk returns a tuple with the Sources field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Route) GetSourcesOk() ([]string, bool) {
	if o == nil || IsNil(o.Sources) {
		return nil, false
	}
	return o.Sources, true
}

// HasSources returns a boolean if a field has been set.
func (o *Route) HasSources() bool {
	if o != nil && !IsNil(o.Sources) {
		return true
	}

	return false
}

// SetSources gets a reference to the given []string and assigns it to the Sources field.
func (o *Route) SetSources(v []string) {
	o.Sources = v
}

// GetDestinations returns the Destinations field value if set, zero value otherwise.
func (o *Route) GetDestinations() []string {
	if o == nil || IsNil(o.Destinations) {
		var ret []string
		return ret
	}
	return o.Destinations
}

// GetDestinationsOk returns a tuple with the Destinations field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Route) GetDestinationsOk() ([]string, bool) {
	if o == nil || IsNil(o.Destinations) {
		return nil, false
	}
	return o.Destinations, true
}

// HasDestinations returns a boolean if a field has been set.
func (o *Route) HasDestinations() bool {
	if o != nil && !IsNil(o.Destinations) {
		return true
	}

	return false
}

// SetDestinations gets a reference to the given []string and assigns it to the Destinations field.
func (o *Route) SetDestinations(v []string) {
	o.Destinations = v
}

// GetTags returns the Tags field value if set, zero value otherwise.
func (o *Route) GetTags() []string {
	if o == nil || IsNil(o.Tags) {
		var ret []string
		return ret
	}
	return o.Tags
}

// GetTagsOk returns a tuple with the Tags field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Route) GetTagsOk() ([]string, bool) {
	if o == nil || IsNil(o.Tags) {
		return nil, false
	}
	return o.Tags, true
}

// HasTags returns a boolean if a field has been set.
func (o *Route) HasTags() bool {
	if o != nil && !IsNil(o.Tags) {
		return true
	}

	return false
}

// SetTags gets a reference to the given []string and assigns it to the Tags field.
func (o *Route) SetTags(v []string) {
	o.Tags = v
}

// GetAgentProtocol returns the AgentProtocol field value if set, zero value otherwise.
func (o *Route) GetAgentProtocol() string {
	if o == nil || IsNil(o.AgentProtocol) {
		var ret string
		return ret
	}
	return *o.AgentProtocol
}

// GetAgentProtocolOk returns a tuple with the AgentProtocol field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Route) GetAgentProtocolOk() (*string, bool) {
	if o == nil || IsNil(o.AgentProtocol) {
		return nil, false
	}
	return o.AgentProtocol, true
}

// HasAgentProtocol returns a boolean if a field has been set.
func (o *Route) HasAgentProtocol() bool {
	if o != nil && !IsNil(o.AgentProtocol) {
		return true
	}

	return false
}

// SetAgentProtocol gets a reference to the given string and assigns it to the AgentProtocol field.
func (o *Route) SetAgentProtocol(v string) {
	o.AgentProtocol = &v
}

// GetService returns the Service field value if set, zero value otherwise.
func (o *Route) GetService() string {
	if o == nil || IsNil(o.Service) {
		var ret string
		return ret
	}
	return *o.Service
}

// GetServiceOk returns a tuple with the Service field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Route) GetServiceOk() (*string, bool) {
	if o == nil || IsNil(o.Service) {
		return nil, false
	}
	return o.Service, true
}

// HasService returns a boolean if a field has been set.
func (o *Route) HasService() bool {
	if o != nil && !IsNil(o.Service) {
		return true
	}

	return false
}

// SetService gets a reference to the given string and assigns it to the Service field.
func (o *Route) SetService(v string) {
	o.Service = &v
}

func (o Route) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o Route) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.CreatedAt) {
		toSerialize["created_at"] = o.CreatedAt
	}
	if !IsNil(o.UpdatedAt) {
		toSerialize["updated_at"] = o.UpdatedAt
	}
	if !IsNil(o.Index) {
		toSerialize["index"] = o.Index
	}
	toSerialize["name"] = o.Name
	if !IsNil(o.GatewayId) {
		toSerialize["gateway_id"] = o.GatewayId
	}
	if !IsNil(o.Protocols) {
		toSerialize["protocols"] = o.Protocols
	}
	if !IsNil(o.Methods) {
		toSerialize["methods"] = o.Methods
	}
	if !IsNil(o.Hosts) {
		toSerialize["hosts"] = o.Hosts
	}
	if !IsNil(o.Paths) {
		toSerialize["paths"] = o.Paths
	}
	if !IsNil(o.Headers) {
		toSerialize["headers"] = o.Headers
	}
	if !IsNil(o.HttpsRedirectStatusCode) {
		toSerialize["https_redirect_status_code"] = o.HttpsRedirectStatusCode
	}
	if !IsNil(o.RegexPriority) {
		toSerialize["regex_priority"] = o.RegexPriority
	}
	if !IsNil(o.StripPath) {
		toSerialize["strip_path"] = o.StripPath
	}
	if !IsNil(o.PreserveHost) {
		toSerialize["preserve_host"] = o.PreserveHost
	}
	if !IsNil(o.RequestBuffering) {
		toSerialize["request_buffering"] = o.RequestBuffering
	}
	if !IsNil(o.ResponseBuffering) {
		toSerialize["response_buffering"] = o.ResponseBuffering
	}
	if !IsNil(o.Snis) {
		toSerialize["snis"] = o.Snis
	}
	if !IsNil(o.Sources) {
		toSerialize["sources"] = o.Sources
	}
	if !IsNil(o.Destinations) {
		toSerialize["destinations"] = o.Destinations
	}
	if !IsNil(o.Tags) {
		toSerialize["tags"] = o.Tags
	}
	if !IsNil(o.AgentProtocol) {
		toSerialize["agent_protocol"] = o.AgentProtocol
	}
	if !IsNil(o.Service) {
		toSerialize["service"] = o.Service
	}
	return toSerialize, nil
}

func (o *Route) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"name",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varRoute := _Route{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varRoute)

	if err != nil {
		return err
	}

	*o = Route(varRoute)

	return err
}

type NullableRoute struct {
	value *Route
	isSet bool
}

func (v NullableRoute) Get() *Route {
	return v.value
}

func (v *NullableRoute) Set(val *Route) {
	v.value = val
	v.isSet = true
}

func (v NullableRoute) IsSet() bool {
	return v.isSet
}

func (v *NullableRoute) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRoute(val *Route) *NullableRoute {
	return &NullableRoute{value: val, isSet: true}
}

func (v NullableRoute) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRoute) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
